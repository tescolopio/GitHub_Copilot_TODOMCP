# A descriptive name for your workflow
name: CI

# Controls when the workflow will run
on:
  push:
    branches: [main, develop]
    paths:
      - "src/**"
      - "tests/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "tsconfig.json"
      - ".github/workflows/ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "src/**"
      - "tests/**"
      - "package.json"
      - "pnpm-lock.yaml"
      - "tsconfig.json"

# Ensures that only one workflow run is triggered for the same PR or branch
concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # This job runs first and performs quick static checks
  quick-checks:
    name: Quick Checks (Lint & TSC)
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Sets up pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      # Sets up Node.js and caches pnpm dependencies in one step
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm" # This is the recommended way to cache pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript Check
        run: pnpm tsc --noEmit

      - name: Lint
        run: pnpm lint

  # This job runs a single, primary test configuration on all relevant branches/PRs
  test:
    name: Test
    needs: quick-checks # Runs after quick-checks are successful
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      # Generate and upload coverage reports only on pushes to the main branch
      - name: Run coverage
        if: github.ref_name == 'main' && github.event_name == 'push'
        run: pnpm test:coverage

      - name: Upload coverage to Codecov
        if: github.ref_name == 'main' && github.event_name == 'push'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # It's recommended to use a token
          fail_ci_if_error: false

  # This job runs an extended test matrix, but ONLY on the 'main' branch
  test-matrix:
    name: Test Matrix (Node ${{ matrix.node-version }} on ${{ matrix.os }})
    if: github.ref_name == 'main' # This job only runs on the main branch
    needs: quick-checks
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false # Don't cancel other matrix jobs if one fails
      matrix:
        os: [windows-latest, macos-latest]
        node-version: [20]
        include:
          - os: ubuntu-latest
            node-version: 18

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js v${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

  # This job builds the project and uploads artifacts
  build:
    name: Build
    # This job will run after the primary test job and the matrix test job.
    # The 'always()' function ensures this job runs even if 'test-matrix' is skipped (because it's not the main branch).
    if: always() && github.actor != 'dependabot[bot]'
    needs: [test, test-matrix]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # This step ensures the build only proceeds if the required tests passed.
      # It correctly handles the 'skipped' status for the 'test-matrix' job.
      - name: Check test job status
        if: needs.test.result != 'success' || needs.test-matrix.result == 'failure'
        run: |
          echo "Aborting build because a required test job failed or was cancelled."
          exit 1

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: 'dist' directory not found."
            exit 1
          fi
          echo "Build successful."

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
          retention-days: 7
